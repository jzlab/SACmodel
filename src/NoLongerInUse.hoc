for fakevari=0,160{
        x=fakevari
        for fakevari2=160,321{
             y=fakevari2
            relx=x-gango
            rely=y-gango
            if(sqrt(relx*relx+rely*rely)< gangL+SACgangDist){
                for idend=0, numgangDend-1 {
                    access Gang.dend[idend]
                    ang=idend*(2*PI)/numgangDend
                    sameside=1
                    if (abs(sin(ang))<.05){
                        thres=SACgangDist
                        prime=rely
                        slidethres=-SACgangDist
                        inquestion=relx
                        if(abs(ang-PI)<.05){
                            inquestion=-inquestion
                        }
                        
                    }else{
                        if(abs(cos(ang))<.1){
                            prime=relx
                            thres=(SACgangDist/sin (ang))
                        }else{
                            if(abs(sin(ang))<.7){
                                thres=SACgangDist/cos(ang)
                                prime=abs((relx/cos(ang)))-abs(rely)
                                if (relx!=0){
                                    if((cos(ang)/relx)<0){sameside=0}
                                }
                            
                            }else{
                                
                                thres=(SACgangDist/sin (ang))
                                prime=(relx-(rely/(sin(ang)/cos(ang))))
                            }
                        }
                        slidethres=(-SACgangDist)/sin(ang)
                        inquestion=rely
                            if(sin(ang)<0){
                            inquestion=-inquestion
                            slidethres=-slidethres
                            }
                        
                    }

                    if(abs(prime)<=abs(thres)&&inquestion>=slidethres&&sameside){



                        if(abs(atan2(rely,relx))>(PI/3)){
                                    likelySAC=1
                                }else{
                                    likelySAC=1
                                }
                                

                                if(randSAC.repick()<likelySAC ){
                                    place=sqrt(relx*relx+rely*rely)/gangL
                                    if (place>1){place=1}
                                    temp=new ComplexCl2g(place)
                                    //setpointer temp.capre, SAC[i2].dend[42+ivari].cai(.8)
                                    Gang.receivesCl[idend].append (temp)
                                    /*
                                    temp= new Vector(2)
                                    temp.x[0]=i2
                                    temp.x[1]=ivari
                                    Gang.fromList.append(temp)
                                    */
                                }
                    }
                    
                    
                    
                    
                    
                    
                    
                    
                    
                    
                }
            }
        }
    }
    for i=0, numgangDend-1{
        print "how many on dend ", i, "?", Gang.receivesCl[i].count()

                                if(abs(atan2(rely,relx))>(PI/3)){  //pd
                            likelySAC=1
                            either=0
                        }else{
                            likelySAC=.1+
                            either=1
                        }



                        
if (SingleSACVGCCExperiment){
    print"SingleSACVGCCExperiment"
    bottom=-80
    vinquestion=-20
    vnum=(vinquestion-bottom)/10
    tdel=100
    
    build()
    access SAC[0].soma
    clamps[0]=new VClamp(.5)
        clamps[0].dur[0]=tdel
        clamps[0].dur[1]=100
        clamps[0].dur[2]=tstop-tdel-1004
        clamps[0].amp[2]=bottom
        clamps[0].amp[0]=bottom

    temp=new Vector()
    for i=1, top{
        clamps[0].amp[1]=bottom+10*i
        temp2=new Vector()
        temp2.record(&clamps[0].i,1)
        run()
        temps[i-1].copy(temp2)
        //temp.append(SAC[c].MrecList.object(d).get(150))
    }
    
    fileob.wopen("SingleSACVGCCExperimentIvsV.txt")
    for i=0, top-1{
        fileob.printf("%g %g \n", bottom+(i+1)*10, temps[i].x[150] )
    }
    fileob.close()
    
    
    fileob.wopen("SingleSACVGCCExperimentITrace.txt")
    for i=0, tstop-1{
        fileob.printf("%g \n", temps[vnum].x[i])
    }
    fileob.close()
    
    
    fileob.wopen("SingleSACVGCCExperimentTestvsV0.txt")
    for i=0, top-1{
        fileob.printf("%g %g \n", bottom+(i+1)*10, temp.x[i] )
    }
    fileob.close()
    c=0
    d=0
    graphG5()
    graphG4()
 
    
    //temps[].x[150]
   
    testg=temps[0]
  
   
    includevgcc=1
    load_file("BuildSAC.hoc")
    load_file("Delay&ConnectSAC.hoc")
    build()
    access SAC[0].soma
    clamps[0]=new VClamp(.5)
        clamps[0].dur[0]=tdel
        clamps[0].dur[1]=tstop-tdel
        clamps[0].amp[0]=bottom
    for i=1,top{
        clamps[0].amp[1]=bottom+10*i
        temp=new Vector()
        temp.record(&clamps[0].i,1)
        run()
        temps2[i-1].copy(temp)

    }
   
   
 
    for i=0,top-1{
      
        temps2[i].sub(temps[i])
        print "size", temps2[i].size()
        print ( temps2[i].min(10, tstop-1) )
        differencemin.append( temps2[i].min(10, tstop-1) )
    }
    
    
    fileob.wopen("SingleSACVGCCExperiment.txt")
    for i=0, top-1{
        fileob.printf("%g %g \n", bottom+(i+1)*10, differencemin.x[i] )
    }
    fileob.close()
    
  
  

