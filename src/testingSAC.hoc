
proc graphG6(){
      
        //g6.size(0,tstop,0,5.5)
        g6.color(2)
        g6.label("g6")
        g6.beginline()
        for (t=1;t<tstop;t+=1){
            g6.line(t,testg.get(t) )
        }
        g6.view(0,tstop,0,5.5,800,400,350,200)
        g6.flush()
}

proc graphG7(){
      
       // g7.size(0,tstop,-2,2)
        g7.color(4)
        g7.label("g7")
        g7.beginline()
        for (t=1;t<tstop;t+=1){
            g7.line(t,testg2.get(t) )
        }
        g7.view(100,100,100,100,600,400,350,200)
        g7.flush()
}

proc graphG8(){
      
        //g8.size(0,tstop,-2,2)
        g8.color(5)
        g8.label("g8")
        g8.beginline()
        for (t=0;t<tstop;t+=1){
            g8.line(t,testg3.get(t) )
        }
        g8.view(0,tstop,0,5.5,800,450,350,200)
        g8.flush()
}
proc graphG9(){
      
        //g9.size(0,tstop,-2,2)
        g9.color(6)
        g9.label("g9")
        g9.beginline()
        for (t=0;t<tstop;t+=1){
            g9.line(t,testg4.get(t) )
        }
        g9.view(0,tstop,0,5.5,100,450,350,200)
        g9.flush()
}
proc graphG10(){
      
        //g9.size(0,tstop,-2,2)
        g10.color(6)
        g10.label("g10")
        g10.beginline()
        for (t=0;t<tstop;t+=1){
            g9.line(t,testg5.get(t) )
        }
        g10.view(0,tstop,0,5.5,100,450,350,200)
        g10.flush()
}
proc graphG5(){
    g5.size(0,tstop,0,1.5)
    g5.color(3)
    g5.label("g5")
    g5.beginline()
    for(t=0;t<tstop;t=t+1){
        g5.line(t,Simple[0].CAIrecList.object(0).get(t))
    }
    g5.flush()
}
proc graphG4(){
    g4.size(0,tstop,0,1.5)
    g4.color(3)
    g4.label("g4")
    g4.beginline()
    for(t=0;t<tstop;t=t+1){
        g4.line(t,Simple[1].ICArecList.object(0).get(t))
    }
    g4.flush()
}
proc graphAngleCA(){

    g.size(-PI, PI, 0, 2)
    g.beginline()
    for(w=0; w<=SAC[chosenSAC].endAngle.size()-1; w+=1){
        g.line(SAC[chosenSAC].endAngle.get(w), SAC[chosenSAC].CAIrecList.object(w).max())         
    }
    g.view(-PI,0,2*PI,3,150,50,350,200)
    g.flush()
}

proc graphAngleV(){

    g10.size(-PI, PI, -60, -10)
    g10.color(2)
    g10.beginline()
    for(w=0; w<=SAC[chosenSAC].endAngle.size()-1; w+=1){
        g10.line(SAC[chosenSAC].endAngle.get(w), SAC[chosenSAC].VrecList.object(w).max())         
    }
    g10.flush()
}


proc fileConductanceBubbleGraph(){  //written to be across the x axis not the axis of motion //if you change from .5 to another number make sure the 0s and 1s are going the right direction
    if(network2||DingNetwork||fakenetwork){

        fileob.wopen("ConductanceBubbleGraph.txt")
        fileob.printf("ConductanceBubbleGraph \n")
        fileob.printf("t space sac/bip/ica g \n")
        counter=3
        
        for j=0, ISACrecList.count()-1{  //inhibition //MAKE IT SO IT INCLUDES FAKE INHIBITION TOO
            if(DingNetwork){access SAC[chosenSAC].dend[SAC[chosenSAC].fromList.object(j).x[2]]}
            if(fakenetwork){
                if(everythinginthesoma){
                    access SAC[chosenSAC].soma
                }else if(everythingontheoutside){
                    access SAC[chosenSAC].dend[ConductanceVectorNewLoc.x[j]]
                }else{
                    access SAC[chosenSAC].dend[ConductanceVectorLoc.x[j]]
                }
            }
            for i=0,tstop-1{
                
                ISACpos=x3d(0)-((x3d(0)-x3d(1))/2)
                if(ISACrecList.object(j).x[i]!=0){
                    fileob.printf("%g %g sac %g\n",i ,ISACpos-Xorg.x[chosenSAC], ISACrecList.object(j).x[i] )
                    counter=counter+1
                }
            }
        }
        print "ConductanceBubbles bip first occurance", counter+1
        for j=0, IBIPrecList.count()-1{  //excitation
            for i=0,tstop-1{
                if(IBIPrecList.object(j).x[i] !=0 ){
                    fileob.printf("%g %g bip %g\n",i ,SAC[chosenSAC].bipSynapses.object(j).locx-Xorg.x[chosenSAC],  IBIPrecList.object(j).x[i] )
                    counter=counter+1
                }
            }
        }
        /*
        print "ConductanceBubbles cai first occurance", counter+1
        for j=0, SAC[chosenSAC].CAIeverythingrecList.count()-1{  //cai
            for i=0, tstop-1{  
                access SAC[chosenSAC].dend[j+numInside2]
                fileob.printf("%g %g cai %g\n",i ,x3d(0)+((x3d(1)-x3d(0))*.5)-Xorg.x[chosenSAC], SAC[chosenSAC].CAIeverythingrecList.object(j).x[i] )
                
            }
        }
        */
        fileob.close()
    }
}
proc fileV_CAI_TuningCurves(){
    fileob.wopen("V_CAI_TuningCurves.txt")
    fileob.printf("Maximum_Calcium_Concentration_Across_Angles \n")
    fileob.printf("Angle Max_V Max_CAi \n")
    for i=0,numOutside-1{
        fileob.printf("%g %g %g\n",SAC[chosenSAC].endAngle.x[i],SAC[chosenSAC].VrecList.object(i).max(), SAC[chosenSAC].CAIrecList.object(i).max() )
    } //variAngle needs to be only the outside ones, but do we use it for something else
    fileob.printf("%g %g %g\n",SAC[chosenSAC].endAngle.x[0],SAC[chosenSAC].VrecList.object(0).max(), SAC[chosenSAC].CAIrecList.object(0).max() )
    fileob.printf("%g %g %g\n",SAC[chosenSAC].endAngle.x[1],SAC[chosenSAC].VrecList.object(1).max(), SAC[chosenSAC].CAIrecList.object(1).max() )
    fileob.close()
}

proc fileEndTraces(){
    fileob.wopen("EndTraces.txt")  //voltage, ca concentration, current ca, numreleased, postcurrent
    //voltage ca concentration, ca current, potassium current
    fileob.printf("V_null CAI_null ICA_null IK_null V_preferrec CAI_preferred ICA_preferred IK_preferred\n")
    Dend1=SAC[chosenSAC].nullpref.x[0]
    Dend2=SAC[chosenSAC].nullpref.x[1]
    
    for i=0, SAC[chosenSAC].VrecList.object(0).size()-1{
        
        fileob.printf("%g %g %g %g ", SAC[chosenSAC].VrecList.object(Dend1).x[i], SAC[chosenSAC].CAIrecList.object(Dend1).x[i], SAC[chosenSAC].ICArecList.object(Dend1).x[i], SAC[chosenSAC].IKrecList.object(Dend1).x[i] )
        fileob.printf("%g %g %g %g\n", SAC[chosenSAC].VrecList.object(Dend2).x[i], SAC[chosenSAC].CAIrecList.object(Dend2).x[i], SAC[chosenSAC].ICArecList.object(Dend2).x[i], SAC[chosenSAC].IKrecList.object(Dend2).x[i] )
    }
    fileob.close()
}